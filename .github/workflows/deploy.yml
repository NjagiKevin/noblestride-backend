name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "/opt/docker/Noblestride/backend/noble_backend"

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          timeout: 30m
          script: |
            cd /opt/docker/Noblestride/backend/noble_backend
            docker-compose build app
            docker-compose run --rm app npx sequelize-cli db:migrate
            docker-compose run --rm app npx sequelize-cli db:seed:all
            docker-compose up -d app
            
            echo "Waiting for app service to be healthy..."
            for i in $(seq 1 60); do
              HEALTH_STATUS=$(docker-compose ps -q app | xargs docker inspect --format='{{.State.Health.Status}}')
              if [ "$HEALTH_STATUS" == "healthy" ]; then
                echo "App service is healthy."
                exit 0
              fi
              echo "App service is not healthy yet. Waiting... ($i/60)"
              sleep 5
            done
            echo "App service did not become healthy within the timeout."
            exit 1
