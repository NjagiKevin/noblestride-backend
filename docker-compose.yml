networks:
  noblestride-network:
    external: true

services:
  noblestride-service-db:
    image: postgres:16.3
    build:
      context: .
      dockerfile: Dockerfile.postgres
    container_name: noblestride-service-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - noblestrideservice-db-data:/var/lib/postgresql/data # Persist database data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh # Initialization script
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      timeout: 10s
      retries: 5
    # volumes:
    #   - noblestrideservice-db-data:/var/lib/postgresql/data
    networks:
      - noblestride-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - noblestride-network

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - noblestride-network

  redis:
    image: redis:7.0-alpine
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - noblestride-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: noblestride-service
    restart: on-failure
    depends_on:
      noblestride-service-db:
        condition: service_healthy
      kafka:
        condition: service_started
      redis:
        condition: service_started

    networks:
      - noblestride-network
    
    ports:
      - "3030:3030"
    env_file:
      - .env

    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: "3G"

    user: "1000:1000"

volumes:
  noblestrideservice-db-data:
